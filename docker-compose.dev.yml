version: '3'
services:
  db:
    restart: always
    image: postgres:14-alpine
    shm_size: 256mb
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'postgres']
    environment:
      - 'POSTGRES_HOST_AUTH_METHOD=trust'
      - 'POSTGRES_DB=mastodon_development'

  redis:
    restart: always
    image: redis:7-alpine
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']


  web:
    build:
      context: docker/mastodondev
      args:
        - HOST_UID=$UID
        - HOST_GID=${GID:-$UID}
        - HOST_HOME=$HOME
        - HOST_USER=$USER
    image: mastodon.local/mastodondev
    env_file: .env.dev
    user: "$UID:${GID:-$UID}"
    command: >
      sh -c "yarn install && bundle install && rm -f /mastodon/tmp/pids/server.pid && bundle exec rails s --environment=development --binding=0.0.0.0 -p 3000"
    healthcheck:
      # prettier-ignore
      test: ['CMD-SHELL', 'wget -q --spider --proxy=off localhost:3000/health || exit 1']
    ports:
      - '3000:3000'
    depends_on:
      - db
      - redis
    working_dir: /mastodon
    volumes:
      - $PWD:/mastodon
      - $PWD/.home:$HOME

  streaming:
    image: mastodon.local/mastodondev
    user: "$UID:${GID:-$UID}"
    env_file: .env.dev
    command: yarn run start
    healthcheck:
      # prettier-ignore
      test: ['CMD-SHELL', 'wget -q --spider --proxy=off localhost:4000/api/v1/streaming/health || exit 1']
    ports:
      - '4000:4000'
    depends_on:
      - db
      - redis
      - web
    working_dir: /mastodon
    volumes:
      - $PWD:/mastodon
      - $PWD/.home:$HOME

  webpack:
    build: docker/mastodondev
    image: mastodon.local/mastodondev
    user: "$UID:${GID:-$UID}"
    env_file: .env.dev
    command: ./bin/webpack-dev-server
    ports:
      - '3035:3035'
    working_dir: /mastodon
    volumes:
      - $PWD:/mastodon
      - $PWD/.home:$HOME
    depends_on:
      - web

  jamproxy:
    image: mastodon.local/mastodondev
    user: "$UID:${GID:-$UID}"
    env_file: .env.dev
    command: yarn run jamproxy
    ports:
      - '8000:8000'
    working_dir: /mastodon
    volumes:
      - $PWD:/mastodon
      - $PWD/.home:$HOME
    depends_on:
      - web

  sidekiq:
    build: docker/mastodondev
    image: mastodon.local/mastodondev
    env_file: .env.dev
    user: "$UID:${GID:-$UID}"
    command: bundle exec sidekiq
    depends_on:
      - db
      - redis
      - web
    working_dir: /mastodon
    volumes:
      - $PWD:/mastodon
      - $PWD/.home:$HOME
    healthcheck:
      test: ['CMD-SHELL', "ps aux | grep '[s]idekiq\ 6' || false"]
